
@model UploadDataToDB.ViewModel.ContentViewModel
    @{ 
        ViewBag.Title = "Edit";
    } 
<script type = "text/javascript" > function fileCheck(obj)
    {
        var fileExtension = ['jpeg', 'jpg', 'png', 'gif', 'bmp']; if ($.inArray($(obj).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
            alert("Only '.jpeg','.jpg', '.png', '.gif', '.bmp' formats are allowed.");

        }
    } </script > <h2> Edit </h2 > @*@using(Html.BeginForm()) *@ 
@using (Html.BeginForm("Edit", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken() <div class="form-horizontal"> <h4>Content</h4> <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

    <div class="form-group">
    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10"> @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } }) 
    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" }) </div> </div> 


            @*<div class="form-group">
            @Html.Label("Brand Name ", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BrandId", null, htmlAttributes: new { @class = "form-control" })
                
            </div>
            </div>
 

        <div class="form-group">
                @Html.Label("Category Name ", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
               
            </div>
        </div>*@

    <div class="form-group">
    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" }) 
    <div class="col-md-10">
    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } }) 
    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
     </div>
     </div> 
    
    <div class="form-group"> 
    @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10"> @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" }) </div> 
        </div> 
    
    <div class="form-group">
    @Html.LabelFor(model => model.Image, new { @class = "control-label col-md-2" })
    <div class="col-md-10"> <input type = "file" name="ImageData" id="ImageData" onchange="fileCheck(this);" />
     @Html.ValidationMessageFor(model => model.Image) </div> </div> <div class="form-group"> <div>
    
    
    <div class="col-md-10">
    <img src = "data:image;base64,@System.Convert.ToBase64String(Model.Image)" width="250" height="250" /> </div> </div> 
    </div> @*<div class="form-group"> @Html.LabelFor(model => model.Review, htmlAttributes: new { @class = "control-label col-md-2" }) <div class="col-md-10"> @Html.EditorFor(model => model.Review, new { htmlAttributes = new { @class = "form-control" } }) @Html.ValidationMessageFor(model => model.Review, "", new { @class = "text-danger" }) </div> </div>*@ 
    <div class="form-group"> 
        <div class="col-md-offset-2 col-md-10">
            <input type = "submit" value="Save" class="btn btn-default" /> 
                                                                                                                                                                                                                                                                 </div> 
                                                                                                                                                                                                                                                               </div>
 </div> 
}